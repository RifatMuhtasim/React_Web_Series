{"version":3,"sources":["blockchainJsonFile/blockchainAbiAddress.js","context/MainContext.js","templates/companiesToken/AddANewCompany.js","templates/companiesToken/TokenExchangeTypeA2CompanyList.js","templates/companiesToken/ListOfExchangeCompany.js","templates/2ndMarket/secondary_market_listed_company.js","templates/Home.js","templates/About.js","utility/useWindowResize.js","templates/profile/InvestorCompanies.js","templates/profile/GiftTokens.js","templates/profile/ProfilePage.js","templates/companyDashboard/companyIPO.js","templates/companyDashboard/tokenTypeA2Dashboard.js","templates/companyDashboard/tokenTypeA1Dashboard.js","templates/2ndMarket/companyExchange.js","mainUrls.js","layout/header.js","media/img1/footer2.jpg","layout/footer.js","layout/mui_custom_theme.js","layout/base.js","App.js","index.js"],"names":["InvestorInformationContractAddress","InvestorInformationContractABI","InvestorInformationJsonFile","TokenExchangeTypeA2ContractAddress","TokenExchangeTypeA2ConractABI","TokenExchangeType2File","Exchange_token_address","Exchange_2nd_market_token_file","Exchange_2nd_market_json_file","TokenExchangeContractAddress","TokenExchangeContractABI","TokenExchangeFile","ethereum","window","MainContext","React","createContext","MainProvider","children","web3","Web3","givenProvider","useState","sessionStorage","getItem","account","setAccount","isCompany","setIsCompany","isCompanyTypeA2","setIsCompanyTypeA2","loadWallet","console","log","request","method","accounts","length","setItem","loadCompanyAddress","clear","localStorage","connectWallet","alert","location","reload","checkCompanyAddress","TokenExchangeContract","eth","Contract","TokenExchangeTypeA2Contract","methods","call","from","data","isCompanyAlreadyListed","data2","useEffect","mounted","fetch_data","Provider","value","DisconnectWallet","replace","AddANewCompany","addCompany","setAddCompany","useContext","ipoPriceValue","setIpoPriceValue","style","marginTop","Paper","variant","sx","p","mt","mb","FormControl","FormLabel","id","RadioGroup","row","name","onChange","e","target","FormControlLabel","control","Radio","label","Box","component","onSubmit","preventDefault","FormData","currentTarget","companyName","get","tradingCode","numberOfTokensListed","companySecretCode","perTokenPrice","numberOfMaximumTokensOneCanPurchased","floorPrice","capPrice","companyCode","toUpperCase","AddCompany","send","once","receipt","addTypeA2Company","paddingTop","TextField","required","type","width","pr","textTransform","Button","borderColor","color","TokenExchangeTypeA2Companies","loading","setLoading","typeA2CompanyList","setTypeA2CompanyList","getAllTokenA2ListedCompany","paddingBottom","Divider","display","pt","CircularProgress","size","companyList","CompanyList","props","handleSubmit","Date","now","companyId","companyAddress","numberOfTokenWantToPurchased","bidPrice","maximumAmountOfTokenOneCanBuy","amount","parseInt","GenFee","Math","pow","totalAmount","bidTokenOnA2Company","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","company","listedToken","Link","href","InputProps","inputProps","min","max","padding","step","ml","Companies","Fragment","CompaniesIndex","setCompanyList","GetAllCompany","numberOfTokenPurchased","hexAmount","toString","params","to","gas","InvestorPurchasedTokens","tokens","Secondary_market_listed_company","ContractFixedCompanies","ContractBookCompanies","tokenA1List","setTokenA1List","tokenA2List","setTokenA2List","tokenA1Company","tokenA2Company","navigate","useNavigate","onClick","state","Home","minHeight","marginBottom","About","height","shortenAddress","address","slice","useWindowResize","innerHeight","innerWidth","setSize","handle_resize","addEventListener","removeEventListener","InvestorCompanies","companies","setCompanies","fixedCompanies","setFixedCompanies","GetInvestorCompaniesLength","dataLength","GetInvestorCompany","getAllInvestorCompanyLength","fixedTokenCompanyLength","fixedCompanyData","i","getAllInvestorToken","a2CompanyList","amountOfTokens","GiftTokens","investorAddress","numberOfTokens","ExchangeTokens","Profile","getInvestorData","setGetInvestorData","InvestorInformationContract","GetInvestorInformation","mx","marginLeft","marginRight","paddingLeft","InvestorInformation","InvestorData","InvestorId","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","primary","username","email","phoneNumber","secretKey","InvestorSubmitInformation","loading2","setLoading2","event","SaveInvestorInformation","CompanyIPO","setCapPrice","bidTokenValue","setBidTokenValue","cutoffPrice","setCutoffPrice","extraToken","setExtraToken","a2CompanyInfo","setA2CompanyInfo","isCompanyCutOff","typeA2Company","typeA2CompanyInfo","selectCutOffPrice","priceDifference","currentPrice","numberOftokenOnBidPrice","pb","TokenOnBidPriceTable","A2CompanyInfo","handleClick","IPOTokenExchange","index","justifyContent","minWidth","TokenTypeA2","TypeA1orTypeA2","CompanyDashboardTypeA1","investorList","setInvestorList","GetCompanyAllInvestorLength","values","GetCompanyAllInvestor","CompanyInvestorList","Grid","container","spacing","investor","item","CompanyExchangeToken","trading_code","useParams","useLocation","TokenAContract","TokenExContract","user_info","setUser_info","last_ex_price","setLast_ex_price","last_ex_price_data","investorTokenInfo","user_info_data","fontSize","Purchased_Tokens","instantlyPrice","setIstantlyPrice","company_name","company_id","remaining_buying_token","setRemaining_buying_token","buy_instantly_token","setBuy_instantly_token","buy_instantly_price","setBuy_instantly_price","buy_instantly_total","setBuy_instantly_total","remaining_token_for_buy","buy_instantly","number_of_token_want_to_purchased","View_instantly_buying_price","blockchain_data","Grid2","xs","bid_token","bid_price","Bid_token","borderLeft","confirm_instantly_buy","Sell_tokens","remaining_selling_token","setRemaining_selling_token","sell_instantly_token","setSell_instantly_token","sell_instantly_price","setSell_instantly_price","sell_instantly_total","setSell_instantly_total","remaining_token_for_sell","sell_instantly","number_of_token_want_to_sell","View_instantly_selling_price","ask_token","ask_price","Ask_token","Loading_bar","MainUrls","isAccount","path","element","Header","className","position","zIndex","alignItems","cursor","Header_bar","mr","backgroundColor","borderRadius","List_item","underline","Footer","src","footer","alt","opacity","objectFit","objectPosition","Container","maxWidth","Typography","Mui_custom_theme","createTheme","palette","mode","background_color","background_color_dark","rprimary","rprimary_hover","cprimary","cprimary_hover","typography","fontFamily","Layout","ThemeProvider","theme","square","elevation","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e88946f7.chunk.js","sourcesContent":["import InvestorInformationJsonFile from './InvestorInformationABIJsonFIle.json'\nimport TokenExchangeFile from './TokenTypeA1JsonFile.json';\nimport TokenExchangeType2File from './TokenExchangeTypeA2Json.json';\nimport Exchange_2nd_market_json_file from './Exchange_2nd_market_json_file.json'\n\n\n\nexport const InvestorInformationContractAddress = '0x36eE7E171C667D8f6EAfa067c712044264e301ba'\nexport const InvestorInformationContractABI = InvestorInformationJsonFile\n\nexport const TokenExchangeTypeA2ContractAddress = '0x1e44F219836D17826aAfc238d3b3A27F345b2201'\nexport const TokenExchangeTypeA2ConractABI = TokenExchangeType2File\n\n\nexport const Exchange_token_address = '0x64DeE0AAC9183821208E80403fc225ACbbF7DeAA'\nexport const Exchange_2nd_market_token_file = Exchange_2nd_market_json_file\n\n\nexport const Token_type_A1_address = '0x1079623e2664331D159Ce10175CDafD575B625Df'\nexport const TokenExchangeContractAddress =   Token_type_A1_address\nexport const TokenExchangeContractABI = TokenExchangeFile","import React, {useState, useEffect} from 'react';\nimport Web3 from 'web3';\nimport { TokenExchangeContractABI, TokenExchangeContractAddress, TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress } from '../blockchainJsonFile/blockchainAbiAddress';\n\n\nconst { ethereum } = window;\nexport const MainContext = React.createContext();\n\nexport const MainProvider = ({children}) => {\n     const web3 = new Web3(Web3.givenProvider)\n     const [account, setAccount ] = useState(sessionStorage.getItem(\"account\") ? sessionStorage.getItem(\"account\") : null);\n     const [isCompany, setIsCompany] = useState()\n     const [isCompanyTypeA2, setIsCompanyTypeA2] = useState()\n\n\n     const loadWallet = async () => {\n          try{\n               if (!ethereum) {console.log(\"Please Install MetaMask\")}\n\n               const accounts = await ethereum.request({method: \"eth_accounts\"})\n               if(accounts.length && account) {\n                    setAccount(accounts[0])\n                    sessionStorage.setItem(\"account\", accounts[0])\n                    loadCompanyAddress(accounts[0])\n\n               } else {\n                    setAccount(null)\n                    sessionStorage.clear()\n                    localStorage.clear()\n                    console.log(\"No Accounts Found ..\")\n               }\n\n          } catch(error) {\n               console.log(error)\n          }\n     }\n\n\n     const connectWallet = async () => {\n          try{\n               if(!ethereum) { alert(\"Please Install MetaMask !!\")}\n               const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n               setAccount(accounts[0])\n               loadCompanyAddress(accounts[0])\n               sessionStorage.setItem(\"account\", accounts[0])\n               window.location.reload()\n\n          } catch(error) {\n               console.log(error)\n          }\n     }\n\n\n     const DisconnectWallet = () => {\n          console.log(\"Disconnect Wallet !! \")\n          setAccount(null);\n          sessionStorage.clear();\n          localStorage.clear();\n          window.location.replace(\"/\")\n     }\n\n\n     const loadCompanyAddress =async (checkCompanyAddress) => {\n          try{\n               if(!ethereum) { alert(\"Please Install MetaMask !!\")}\n               if(checkCompanyAddress) {\n                    const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n                    const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress);\n\n                    const data = await TokenExchangeContract.methods.isCompany(checkCompanyAddress).call({from: checkCompanyAddress});\n                    const data2 = await TokenExchangeTypeA2Contract.methods.isCompanyAlreadyListed(checkCompanyAddress).call({from: checkCompanyAddress});\n                    setIsCompany(data)\n                    setIsCompanyTypeA2(data2)\n               }\n\n          } catch(error) {\n               console.log(error)\n          }\n     }\n\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if (mounted ) {\n                    await loadWallet();\n               }\n          }\n          fetch_data()\n\n          return function cleanup() {mounted = false}\n     }, [])\n\n\n     return(\n          <MainContext.Provider value={{account, isCompany, isCompanyTypeA2, connectWallet, DisconnectWallet}}>\n               {children}\n          </MainContext.Provider>\n     )\n}","import * as React from 'react'; \nimport  {useState, useEffect, useContext} from \"react\";\nimport {Paper, Box , TextField, Button, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel} from \"@mui/material\";\nimport Web3 from 'web3';\nimport { MainContext } from \"../../context/MainContext\";\nimport { TokenExchangeContractABI, TokenExchangeContractAddress, TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress  } from \"../../blockchainJsonFile/blockchainAbiAddress\";\n\n\n\nexport const AddANewCompany = () => {\n     const [addCompany, setAddCompany] = useState(true)\n     const {account, isCompany} = useContext(MainContext);\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n     const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress);\n     const [ipoPriceValue, setIpoPriceValue] = useState('BookBuildingPrice')\n\n     const handleChange = (e) => {\n          setIpoPriceValue(e.target.value);\n     };\n\n     const handleSubmit = (e) => {\n          e.preventDefault();\n          const data = new FormData(e.currentTarget);\n\n          const companyName = data.get(\"companyName\");\n          const tradingCode = data.get(\"companyCode\");\n          const numberOfTokensListed = data.get(\"numberOfTokensListed\");\n          const companySecretCode = data.get(\"secretCode\");\n          const perTokenPrice = data.get('perTokenPrice');\n          const numberOfMaximumTokensOneCanPurchased = data.get('numberOfMaximumTokensOneCanPurchased')\n          const floorPrice = data.get('floorPrice')\n          const capPrice = data.get('capPrice')\n          const companyCode = tradingCode.toUpperCase();\n\n          if( companySecretCode != \"umbrella\") {\n               alert(\"Secret Code is not matched !!\")\n               window.location.reload();\n\n          } else {\n\n               const secretKey  = 747\n               if(account && addCompany ) {\n                    if(ipoPriceValue === 'FixedPrice') {\n                         TokenExchangeContract.methods.AddCompany( account, companyCode, companyName, numberOfTokensListed, secretKey, perTokenPrice, numberOfMaximumTokensOneCanPurchased).send({from: account})\n                         .once('receipt', (receipt) => {\n                              console.log(receipt);\n                              setAddCompany(false);\n                              window.location.reload();\n                         })\n\n                    } else {\n                         TokenExchangeTypeA2Contract.methods.addTypeA2Company(account,  companyCode, companyName, numberOfTokensListed, numberOfMaximumTokensOneCanPurchased, floorPrice, capPrice, secretKey).send({from: account})\n                         .once('receipt', (receipt) => {\n                              console.log(receipt);\n                              setAddCompany(false);\n                              window.location.reload();\n                         })\n                         \n                    }\n               }\n          }\n     }\n\n     return(\n          <div style={{ marginTop: \"0px\"}}>\n               <Paper variant=\"outlined\"  sx={{ p: 7, mt:5, mb: 10}}>\n               <div>\n                    <h3>Add Token-A Company on Exchange Market</h3>\n               </div>\n\n               <div>\n               <FormControl>\n                    <FormLabel id=\"demo-controlled-radio-buttons-group\">IPO Price System</FormLabel>\n                    <RadioGroup\n                         row\n                         aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                         name=\"controlled-radio-buttons-group\"\n                         value = {ipoPriceValue}\n                         onChange={handleChange}\n                         >\n                         <FormControlLabel value=\"BookBuildingPrice\" control={<Radio />} label=\"Book Building\" />\n                         <FormControlLabel value=\"FixedPrice\" control={<Radio />} label=\"Fixed Price\" />\n                    </RadioGroup>\n               </FormControl>\n               </div>\n\n               <Box component=\"form\" onSubmit = {handleSubmit} >\n                    <div style={{ paddingTop: \"10px\"}}></div>\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Secret Code\"\n                         name = \"secretCode\"\n                         type = \"password\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Trading Code\"\n                         name = \"companyCode\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", textTransform: 'uppercase'}}\n                    />\n                    <div style={{ paddingTop: \"20px\"}}></div>\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Company Name\"\n                         name = \"companyName\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Number of Tokens want to Listed\"\n                         name = \"numberOfTokensListed\"\n                         type = \"number\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\"}}\n                    />\n\n                    <div style={{ paddingTop: \"20px\"}}></div>\n                    {ipoPriceValue === 'FixedPrice' ? \n                         <React.Fragment >\n                              <TextField required\n                                   id=\"standard-required\"\n                                   label=\"Per Token Price - GWEI\"\n                                   name = \"perTokenPrice\"\n                                   type = \"number\"\n                                   variant=\"standard\"\n                                   sx ={{ width: \"50%\", pr: \"2%\"}}\n                              />\n                         </React.Fragment>\n                         :\n                         <React.Fragment>\n                              <TextField required\n                                   id=\"standard-required\"\n                                   label=\"Floor Price (Lower Price) - GWEI\"\n                                   name = \"floorPrice\"\n                                   type = \"number\"\n                                   variant=\"standard\"\n                                   sx ={{ width: \"50%\", pr: \"2%\"}}\n                              />\n                              <TextField required\n                                   id=\"standard-required\"\n                                   label=\"Cap Price (Upper Price) - GWEI\"\n                                   name = \"capPrice\"\n                                   type = \"number\"\n                                   variant=\"standard\"\n                                   sx ={{ width: \"50%\"}}\n                              />\n                              <div style={{ paddingTop: \"20px\"}}></div>\n                         </React.Fragment>\n                    }\n\n               \n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Number of Maximum Tokens one can purchased\"\n                         name = \"numberOfMaximumTokensOneCanPurchased\"\n                         type = \"number\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n\n                    <div>\n                         <Button type=\"submit\" variant=\"outlined\" sx={{ mt: 4, width: \"25%\", borderColor: '#737373', color: '#404040'}}>Add Token-A Company</Button>\n                    </div>\n               </Box>\n               </Paper>\n          </div>\n     )\n}","import React, {useState, useEffect, useContext} from \"react\";\nimport { Paper , Box, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Button, Link} from \"@mui/material\";\nimport Web3 from 'web3';\nimport { MainContext } from \"../../context/MainContext\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { TokenExchangeTypeA2ContractAddress, TokenExchangeTypeA2ConractABI} from \"../../blockchainJsonFile/blockchainAbiAddress\";\n\n\nconst { ethereum } = window;\n\nexport const TokenExchangeTypeA2Companies = () => {\n     const {account} = useContext(MainContext);\n     const [loading, setLoading] = useState(true);\n     const [typeA2CompanyList, setTypeA2CompanyList] = useState([]);\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress)\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const data = await TokenExchangeTypeA2Contract.methods.getAllTokenA2ListedCompany().call({from: account})\n                    setTypeA2CompanyList(data)\n                    setLoading(false)\n               }\n          }\n          fetch_data()\n\n          return function cleanup() {mounted = false}\n     }, [])\n\n\n     return(\n          <div >\n               <div style={{ paddingTop: \"35px\", paddingBottom: \"5%\"}}>\n\n                    <Paper variant=\"outlined\" sx={{ p: 3}}>\n                         <Box>\n                              <h2>Primary Token A2: Book Building Price Listed Company</h2>\n                              <Divider />\n\n                              <Box>\n                                   { loading ? \n                                        <div >\n                                             <Box sx={{ display: 'flex', pt: 2 }}>\n                                                  <CircularProgress size={60} />\n                                             </Box>\n                                        </div>\n                                   :\n                                        <CompanyList companyList = {typeA2CompanyList} />\n                                   }\n                              </Box>\n                         </Box>\n                    </Paper>\n\n               </div>\n          </div>\n     )\n}\n\n\nconst CompanyList = (props) => {\n     const companyList = props.companyList;\n     // console.log(companyList);\n     const {account, connectWallet} = useContext(MainContext);\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress);\n\n     const currentTime = Date.now()\n\n     const handleSubmit = async (companyId, companyCode, companyAddress, numberOfTokenWantToPurchased, bidPrice, maximumAmountOfTokenOneCanBuy) => {\n          console.log(\"clicked\")\n          const amount = parseInt(numberOfTokenWantToPurchased) * parseInt(bidPrice)  ;\n          const GenFee = (amount / 100) * Math.pow(10, 9);\n          const totalAmount = (amount * Math.pow(10, 9)) +  GenFee ;\n          \n\n          TokenExchangeTypeA2Contract.methods.bidTokenOnA2Company(companyId, companyCode, companyAddress, account, numberOfTokenWantToPurchased, bidPrice , GenFee).send({\n               from: account,\n               value: totalAmount\n          }).once('receipt', (receipt) => {\n               console.log(receipt);\n               window.location.reload();\n          })\n\n     }\n\n\n     return(\n          <div>\n          <TableContainer >\n               <Table  aria-label=\"customized table\">\n                    <TableHead>\n                         <TableRow>\n                              <TableCell align=\"left\">Tranding Code</TableCell>\n                              <TableCell align=\"left\">Company Name</TableCell>\n                              <TableCell align=\"center\">Company Address</TableCell>\n                              <TableCell align=\"right\">Available Tokens</TableCell>\n                              <TableCell align=\"right\">Token Price Range (GWEI)</TableCell>\n                              <TableCell align=\"right\">Remaining time</TableCell>\n                              <TableCell align=\"right\" sx={{width: \"45%\"}} >Select tokens X Per token Price</TableCell>\n                         </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                         {companyList.map((company) => company.listedToken == 0 ? null : (\n                              <TableRow key={company.companyId}  >\n                                   <TableCell align=\"left\">\n                                        <Link href={company.companyCode}>{company.companyCode}</Link>\n                                   </TableCell>\n                                   <TableCell align=\"left\">{company.companyName}</TableCell>\n                                   <TableCell align=\"center\">{company.companyAddress}</TableCell>\n                                   <TableCell align=\"right\">{company.listedToken}</TableCell>\n                                   <TableCell align=\"right\">{company.floorPrice} - {company.capPrice}</TableCell>\n                                   <TableCell align=\"right\">100hr</TableCell>\n\n                                   <TableCell align=\"right\" >\n                                        <Box component=\"form\"  sx={{ display: 'flex'}}\n                                             onSubmit={(e) => {\n                                                  e.preventDefault();\n                                                  handleSubmit(company.companyId, company.companyCode, company.companyAddress, e.target.numberOfTokenWantToPurchased.value, e.target.bidPrice.value, company.maximumAmountOfTokenOneCanBuy)\n                                             }}>\n                              \n                                             <TextField  type=\"number\" InputProps={{ inputProps: { min:1, max: company.maximumAmountOfTokenOneCanBuy} }}\n                                                  sx={{width: \"100%\"}}  required name=\"numberOfTokenWantToPurchased\" label=\"Tokens\" variant=\"standard\" />\n                                             <div style={{ marginTop: \"10%\", padding: \"0px 4px\"}}>X</div>\n                                             <TextField  type=\"number\" InputProps={{ inputProps: { min: company.floorPrice , max: company.capPrice , step: 1} }}\n                                                  sx={{width: \"100%\"}}  required name=\"bidPrice\" label=\"Price\" variant=\"standard\" />\n                                             <Button type=\"submit\" \n                                                  variant=\"outlined\" sx={{mt: 1, ml: 1}}>\n                                                  Bid\n                                             </Button>\n\n                                        </Box>\n                                   </TableCell>\n                              </TableRow>\n                         ))}\n                    </TableBody>\n\n               </Table>\n          </TableContainer>\n     </div>\n     )\n}","import React, {useState, useEffect, useContext} from \"react\";\nimport { Paper , Box, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Button, Link} from \"@mui/material\";\nimport Web3 from 'web3';\nimport { MainContext } from \"../../context/MainContext\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { AddANewCompany } from \"./AddANewCompany\";\nimport { TokenExchangeContractABI,  TokenExchangeContractAddress} from \"../../blockchainJsonFile/blockchainAbiAddress\";\nimport { TokenExchangeTypeA2Companies } from \"./TokenExchangeTypeA2CompanyList\";\n\nconst { ethereum } = window;\n\nexport const Companies = () => {\n     const {account, isCompany, isCompanyTypeA2} = useContext(MainContext);\n\n     return(\n          <React.Fragment>\n               <CompaniesIndex />\n               <TokenExchangeTypeA2Companies />\n               {!isCompany && !isCompanyTypeA2 ? <AddANewCompany /> : null}\n          </React.Fragment>\n     )\n}\n\nexport const CompaniesIndex = () => {\n     const {account} = useContext(MainContext);\n     const [loading, setLoading] = useState(true);\n     const [companyList, setCompanyList] = useState([]);\n     const [addCompany, setAddCompnay] = useState(false);\n\n     const web3 = new Web3(Web3.givenProvider);\n     // console.log(web3)\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n     // console.log(TokenExchangeContract)\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const data = await TokenExchangeContract.methods.GetAllCompany().call({from: account});\n                    setCompanyList(data);\n                    setLoading(false);\n               }\n          }\n          fetch_data();\n\n          return function cleanup() { mounted = false}\n     }, [])\n\n\n     return(\n          <div >\n               <div style={{ paddingTop: \"100px\", paddingBottom: \"1%\"}}>\n\n                    <Paper variant=\"outlined\" sx={{ p: 3}}>\n                         <Box>\n                              <h2>Primary Token A1: Fixed Price Listed Company</h2>\n                              <Divider />\n\n                              <Box>\n                                   { loading ? \n                                        <div >\n                                             <Box sx={{ display: 'flex', pt: 2 }}>\n                                                  <CircularProgress size={60} />\n                                             </Box>\n                                        </div>\n                                   :\n                                        <CompanyList companyList = {companyList} />\n                                   }\n                              </Box>\n                         </Box>\n                    </Paper>\n\n               </div>\n          </div>\n     )\n}\n\n\n\nconst CompanyList = (props) => {\n     const companyList = props.companyList;\n     // console.log(companyList)\n     const {account, connectWallet} = useContext(MainContext);\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n     \n\n     const handleSubmit = async (companyAddress, companyId, numberOfTokenPurchased, companyName, companyCode, perTokenPrice, maximumAmountOfTokenOneCanBuy) => {\n          console.log(\"clicked\")\n          if (!ethereum) return alert(\"Please install MetaMask\");\n          if(!account){ alert(\"Please Connect your Wallet .. \") \n          } else {\n               \n               if(numberOfTokenPurchased > parseInt(maximumAmountOfTokenOneCanBuy)){\n                    alert(`Sorry!! You can buy less than ${maximumAmountOfTokenOneCanBuy}  number of Tokens`)\n                    window.location.reload()\n               } else {\n\n                    const amount = parseInt(numberOfTokenPurchased) * parseInt(perTokenPrice)  \n                    console.log(amount)\n                    // const hexAmount = (amount * Math.pow(10, 18)).toString(16)\n                    const hexAmount = (amount * Math.pow(10, 9)).toString(16)\n\n                    await ethereum.request({\n                         method: \"eth_sendTransaction\",\n                         params: [{\n                              from: account,\n                              to: companyAddress,\n                              gas: '0x5208',\n                              value: hexAmount,\n                         }],\n                    })\n\n                    TokenExchangeContract.methods.InvestorPurchasedTokens(account, companyAddress, companyId, numberOfTokenPurchased, companyName, companyCode).send({from: account})\n                    .once('receipt', (receipt) => {\n                         console.log(receipt)\n                         window.location.reload();\n                    })\n               }\n          }\n     }\n\n     return(\n          <div>\n               <TableContainer >\n                    <Table  aria-label=\"customized table\">\n                         <TableHead>\n                              <TableRow>\n                                   <TableCell align=\"left\">Tranding Code</TableCell>\n                                   <TableCell align=\"left\">Company Name</TableCell>\n                                   <TableCell align=\"center\">Company Address</TableCell>\n                                   <TableCell align=\"right\">Available Tokens</TableCell>\n                                   <TableCell align=\"right\">Per Token Price (GWEI)</TableCell>\n                                   <TableCell align=\"right\">Purchased Tokens</TableCell>\n                              </TableRow>\n                         </TableHead>\n\n                         <TableBody>\n                              {companyList.map((company) => company.tokens == 0 ? null : (\n                                   <TableRow key={company.companyId}  >\n                                        <TableCell align=\"left\"><Link href={company.companyCode}>{company.companyCode}</Link></TableCell>\n                                        <TableCell align=\"left\">{company.name}</TableCell>\n                                        <TableCell align=\"center\">{company.companyAddress}</TableCell>\n                                        <TableCell align=\"right\">{company.tokens}</TableCell>\n                                        <TableCell align=\"right\">{company.perTokenPrice}</TableCell>\n\n                                        <TableCell align=\"right\">\n                                             <Box component=\"form\" \n                                                  onSubmit={(e) => {\n                                                       e.preventDefault();\n                                                       handleSubmit(company.companyAddress, company.companyId, e.target.numberOfTokenPurchased.value, company.name, company.companyCode, company.perTokenPrice, company.maximumAmountOfTokenOneCanBuy)\n                                                  }}>\n                                                  <TextField \n                                                       sx={{width: \"50%\"}} required name=\"numberOfTokenPurchased\" type=\"number\"  label=\"Tokens\" variant=\"standard\" />\n                                                  <Button type=\"submit\" \n                                                       variant=\"outlined\" sx={{mt: 1, ml: 1}}>\n                                                       Buy \n                                                  </Button>\n                                             </Box>\n                                        </TableCell>\n                                   </TableRow>\n                              ))}\n                         </TableBody>\n\n                    </Table>\n               </TableContainer>\n          </div>\n     )\n}","import React, {useState, useEffect, useContext} from \"react\";\nimport { Paper, Box, Divider , Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Button, Link} from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Web3 from 'web3';\nimport { TokenExchangeContractABI,  TokenExchangeContractAddress, TokenExchangeTypeA2ContractAddress, TokenExchangeTypeA2ConractABI} from \"../../blockchainJsonFile/blockchainAbiAddress\";\nimport { MainContext } from \"../../context/MainContext\";\nimport { useNavigate} from 'react-router-dom';\n\n\nexport const Secondary_market_listed_company  = () => {\n     const [loading, setLoading] = useState(true);\n     const {account} = useContext(MainContext)\n     const web3 = new Web3(Web3.givenProvider);\n     const ContractFixedCompanies = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n     const ContractBookCompanies = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress)\n     const [tokenA1List, setTokenA1List] = useState();\n     const [tokenA2List, setTokenA2List] = useState();\n\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const tokenA1Company = await ContractFixedCompanies.methods.GetAllCompany().call({from: account});\n                    setTokenA1List(tokenA1Company)\n                    const tokenA2Company = await ContractBookCompanies.methods.getAllTokenA2ListedCompany().call({from: account})\n                    setTokenA2List(tokenA2Company)\n                    setLoading(false)\n               }\n          }\n          fetch_data()\n\n          return function cleanup() {mounted = false}\n     }, [account])\n\n\n\n     return(\n          <div style={{ paddingTop: \"100px\"}}>\n               <Paper variant=\"outlined\" sx={{ p: 3}}>\n                         <Box>\n                              <h2>Secondary Token A Market Listed Company</h2>\n                              <Divider />\n\n                              <Box>\n                                   { loading ? \n                                        <div >\n                                             <Box sx={{ display: 'flex', pt: 2 }}>\n                                                  <CircularProgress size={60} />\n                                             </Box>\n                                        </div>\n                                   :\n                                        <CompanyList tokenA1List = {tokenA1List} tokenA2List = {tokenA2List} />\n                                   }\n                              </Box>\n                         </Box>\n                    </Paper>\n          </div>\n     )\n}\n\n\nconst CompanyList = (props) => {\n     const tokenA1List = props.tokenA1List;\n     const tokenA2List = props.tokenA2List;\n     const navigate = useNavigate();\n\n\n     return(\n          <div>\n               <TableContainer >\n                    <Table  aria-label=\"customized table\">\n                         <TableHead>\n                              <TableRow>\n                                   <TableCell align=\"left\">Tranding Code</TableCell>\n                                   <TableCell align=\"left\">Company Name</TableCell>\n                                   <TableCell align=\"center\">Company Address</TableCell>\n                                   <TableCell align=\"right\">Trade</TableCell>\n                              </TableRow>\n                         </TableHead>\n\n                         <TableBody>\n                              {tokenA1List.map((company) => company.tokens != 0 ? null :  (\n                                   <TableRow key={company.companyId}>\n                                        <TableCell align=\"left\">{company.companyCode}</TableCell>\n                                        <TableCell align=\"left\">{company.name}</TableCell>\n                                        <TableCell align=\"center\">{company.companyAddress}</TableCell>\n                                        <TableCell align=\"right\">\n\n                                             <Button variant=\"outlined\" onClick={() => {\n                                                  navigate(`/${company.companyCode}`, {\n                                                       state: {companyAddress : `${company.companyAddress}`, companyId: `${company.companyId}`, companyName: `${company.name}`}\n                                                  })\n                                             }}>\n                                                  Trade\n                                             </Button>\n\n                                        </TableCell>\n                                   </TableRow>\n                              ))}\n\n                              {tokenA2List.map((company) => company.listedToken != 0 ? null : (\n                                   <TableRow key={company.companyId}>\n                                        <TableCell align=\"left\">{company.companyCode}</TableCell>\n                                        <TableCell align=\"left\">{company.companyName}</TableCell>\n                                        <TableCell align=\"center\">{company.companyAddress}</TableCell>\n                                        <TableCell align=\"right\">\n\n                                             <Button variant=\"outlined\" onClick={() => {\n                                                  navigate(`/${company.companyCode}`, {\n                                                       state: {companyAddress : `${company.companyAddress}`, companyId: `${company.companyId}`, companyName: `${company.companyName}`}\n                                                  })\n                                             }}>\n                                                  Trade\n                                             </Button>\n\n                                        </TableCell>\n                                   </TableRow>\n                              ))}\n                         </TableBody>\n\n                    </Table>\n               </TableContainer>\n          </div>\n     )\n}\n\n","import React from \"react\";\nimport { CompaniesIndex } from \"./companiesToken/ListOfExchangeCompany\";\nimport { TokenExchangeTypeA2Companies } from \"./companiesToken/TokenExchangeTypeA2CompanyList\";\nimport { Secondary_market_listed_company } from \"./2ndMarket/secondary_market_listed_company\";\n\nexport const Home = () => {\n     return (\n          <div style={{ minHeight: \"70vh\"}}>\n               <center style={{ paddingTop: \"120px\", marginBottom: \"-60px\"}}>\n                    <h2>GENESIEX LAB </h2>\n               </center>\n               <div style={{ paddingBottom : \"100px\"}}>\n                    <Secondary_market_listed_company />\n                    <CompaniesIndex />\n                    <TokenExchangeTypeA2Companies />\n               </div>\n          </div>\n     )\n}","import React from \"react\";\n\n\nexport const About = () => {\n     return (\n          <div style={{ height: \"70vh\"}}>\n               <center style={{ paddingTop: \"200px\"}}>\n                    <h2>ABOUT GENESIEX LAB </h2>\n               </center>\n          </div>\n     )\n}","import React, { useState, useEffect} from \"react\";\n\n\nexport const shortenAddress = (address) => `${address.slice(0, 5)}...${address.slice(address.length - 4)}`;\n\nexport const useWindowResize = () => {\n  const [size, setSize ] = useState([window.innerHeight, window.innerWidth])\n\n  useEffect(() => {\n    const handle_resize = () => {\n      setSize([window.innerHeight, window.innerWidth])\n    }\n    window.addEventListener(\"resize\", handle_resize);\n\n    return() => {\n      window.removeEventListener(\"resize\", handle_resize)\n    }\n  }, [])\n\n  return size;\n}\n","import React, {useState, useEffect, useContext} from \"react\";\nimport { Box, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@mui/material\";\nimport Web3 from 'web3';\nimport { MainContext } from \"../../context/MainContext\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { shortenAddress } from \"../../utility/useWindowResize\";\nimport { TokenExchangeContractABI, TokenExchangeContractAddress, TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress  } from \"../../blockchainJsonFile/blockchainAbiAddress\";\n\n\n\nexport const InvestorCompanies = () => {\n     const {account} = useContext(MainContext);\n     const [loading, setLoading] = useState(true);\n     const [companies, setCompanies] = useState([])\n     const [fixedCompanies, setFixedCompanies] = useState([])\n\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress)\n     const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress );\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted && account) {\n                    const dataLength = await TokenExchangeContract.methods.GetInvestorCompaniesLength(account).call({from: account});\n                    let data = [];\n                    for(var id = 0; id < dataLength; id++){\n                         data[id] = await TokenExchangeContract.methods.GetInvestorCompany(account, id).call({from: account})\n                    }\n\n                    const fixedTokenCompanyLength = await TokenExchangeTypeA2Contract.methods.getAllInvestorCompanyLength(account).call();\n                    var fixedCompanyData = [];\n                    for(var i =0; i < fixedTokenCompanyLength; i++) {\n                         fixedCompanyData[i] = await TokenExchangeTypeA2Contract.methods.getAllInvestorToken(account, i).call();\n                    }\n\n                    setFixedCompanies(fixedCompanyData )\n                    setCompanies(data)\n                    setLoading(false)\n               }\n          }\n          fetch_data();\n\n          return function cleanup() { mounted = false }\n     }, [account])\n     \n     \n     return(\n          <div>\n               <Box>\n                    { loading ? \n                         <div >\n                              <Box component=\"center\" sx={{  pt: 5 }}>\n                                   <CircularProgress size={60} />\n                              </Box>\n                         </div>\n                    :\n                         <center style={{paddingTop: \"5rem\", paddingBottom: \"5rem\"}}>\n                              <h3> {shortenAddress(account)} Investment Companies </h3>\n                              <Divider />\n                              <CompanyList companyList = {companies} a2CompanyList={fixedCompanies}/>\n                         </center>\n                    }\n               </Box>\n          </div>\n     )\n}\n\n\nconst CompanyList = (props) => {\n     const companyList = props.companyList;\n     const a2CompanyList = props.a2CompanyList;\n     const {account} = useContext(MainContext);\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n     \n     \n     return(\n          <div >\n               <TableContainer >\n                    <Table  aria-label=\"customized table\">\n                         <TableHead>\n                              <TableRow>\n                                   <TableCell align=\"left\">Company Code</TableCell>\n                                   <TableCell align=\"left\">Company Name</TableCell>\n                                   <TableCell align=\"center\">Company Address</TableCell>\n                                   <TableCell align=\"right\">Purchased Tokens</TableCell>\n                              </TableRow>\n                         </TableHead>\n\n                         <TableBody>\n                              {companyList.map((company) => \n                              // company.numberOfTokenPurchased == 0 ? null : \n                              (\n                                   <TableRow key={company.companyId}  >\n                                        <TableCell align=\"left\">{company.companyCode}</TableCell>\n                                        <TableCell align=\"left\">{company.companyName}</TableCell>\n                                        <TableCell align=\"center\">{company.companyAddress}</TableCell>\n                                        <TableCell align=\"right\">{company.numberOfTokenPurchased}</TableCell>\n                                   </TableRow>\n                              ))}\n\n                              {a2CompanyList.map((company) => company.numberOfTokenPurchased == 0 ? null : (\n                                   <TableRow key={company.companyId}  >\n                                        <TableCell align=\"left\">{company.companyCode}</TableCell>\n                                        <TableCell align=\"left\">{company.companyName}</TableCell>\n                                        <TableCell align=\"center\">{company.companyAddress}</TableCell>\n                                        <TableCell align=\"right\">{company.amountOfTokens}</TableCell>\n                                   </TableRow>\n                              ))}\n                         </TableBody>\n\n                    </Table>\n               </TableContainer>\n          </div>\n     )\n}\n\n\n","import React, {useContext} from \"react\";\nimport { MainContext } from \"../../context/MainContext\";\nimport { Box, TextField, Paper, Button} from '@mui/material';\nimport Web3 from 'web3';\nimport { TokenExchangeContractABI, TokenExchangeContractAddress } from \"../../blockchainJsonFile/blockchainAbiAddress\";\n\n\n\nexport const GiftTokens = () => {\n     const { account} = useContext(MainContext)\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n\n\n     const handleSubmit = async (e) => {\n          e.preventDefault();\n          if(account) {\n               const data = new FormData(e.currentTarget);\n               const investorAddress = data.get(\"investorAddress\");\n               const companyAddress = data.get(\"companyAddress\");\n               const numberOfTokens = data.get(\"numberOfTokensAsAGift\");\n\n               TokenExchangeContract.methods.ExchangeTokens(account, investorAddress, companyAddress, numberOfTokens).send({from: account})\n               .once('receipt', (receipt) => {\n                    console.log(receipt);\n                    window.location.reload();\n               })\n          }\n     }\n\n     return(\n          <Paper variant=\"outlined\"  sx={{ p: 7, mt:9, mb: 10}}>\n               <div>\n                    <h3>Gift Tokens to Another Investor</h3>\n               </div>\n               <Box component=\"form\" onSubmit = {handleSubmit} >\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Investor Address\"\n                         name = \"investorAddress\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Company Address\"\n                         name = \"companyAddress\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\"}}\n                    />\n                    <div style={{ paddingTop: \"20px\"}}></div>\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Number of Tokens\"\n                         name = \"numberOfTokensAsAGift\"\n                         type = \"number\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n                    <Button type=\"submit\" variant=\"outlined\" sx={{ mt: 1, width: \"50%\", borderColor: '#737373', color: '#404040'}}>Send Tokens</Button>\n               </Box>\n          </Paper>\n     )\n}","import React , { useContext, useEffect, useState} from \"react\";\nimport { MainContext } from \"../../context/MainContext\";\nimport { Paper, Box, TextField , Button, List, ListItem, ListItemButton, ListItemText, ListItemIcon} from \"@mui/material\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport CheckCircleOutlineRoundedIcon from '@mui/icons-material/CheckCircleOutlineRounded';\nimport Web3 from 'web3';\nimport { InvestorCompanies } from \"./InvestorCompanies\";\nimport { GiftTokens } from \"./GiftTokens\";\nimport {InvestorInformationContractAddress, InvestorInformationContractABI} from '../../blockchainJsonFile/blockchainAbiAddress';\n\n\nexport const Profile = () => {\n     const [loading, setLoading] = useState(false)\n     const {account} = useContext(MainContext)\n     const [getInvestorData, setGetInvestorData] = useState()\n\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted && account){\n                    const web3 = new Web3(Web3.givenProvider);\n                    const InvestorInformationContract = new web3.eth.Contract(InvestorInformationContractABI, InvestorInformationContractAddress)\n                    const data = await InvestorInformationContract.methods.GetInvestorInformation(account).call({ from: account })\n                    setGetInvestorData(data)\n               }\n          }\n          fetch_data();\n\n          return function cleanup() {mounted =false}\n     }, [account])\n\n\n     return(\n          <div style={{ paddingTop: \"40px\"}}>\n               <div style={{ paddingBottom: \"30px\"}}>\n                    <div>\n                         <InvestorCompanies />\n                         <GiftTokens />\n                    </div>\n\n                    <Paper variant=\"outlined\" sx={{ p: 6, mt: \"-20px\", mb: \"7%\", mx:15, marginLeft: \"auto\", marginRight: \"auto\"}}>\n                         { loading ? \n                              <div>\n                                   <Box sx={{ display: 'flex' }}>\n                                        <CircularProgress size={60} />\n                                   </Box>\n                              </div>  :\n                              <div>\n                                   <div style={{ paddingLeft: \"0px\"}}>\n                                        <h2>Investor Information</h2>\n                                        <h5>Address : {account}</h5>\n                                   </div>\n                                   <InvestorInformation getInvestorData ={getInvestorData} />\n                              </div>\n                         }\n                    </Paper>\n\n               </div>\n          </div>\n     )\n}\n\n\nconst InvestorInformation = (props) => {\n     const InvestorData = props.getInvestorData\n     // console.log(InvestorData)\n\n     return(\n          <div>\n               { !InvestorData || InvestorData.InvestorId == 0 ?\n                    <InvestorSubmitInformation/> \n                    :\n                    <Box>\n                         <List>\n                              <ListItem disablePadding>\n                                   <ListItemButton>\n                                        <ListItemIcon>\n                                             <CheckCircleOutlineRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={`Username: ${InvestorData.username}`} />\n                                   </ListItemButton>\n\n                              </ListItem>\n                              <ListItem disablePadding>\n                                   <ListItemButton>\n                                        <ListItemIcon>\n                                             <CheckCircleOutlineRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={`Email: ${InvestorData.email}`} />\n                                   </ListItemButton>\n                              </ListItem>\n\n                              <ListItem disablePadding>\n                                   <ListItemButton>\n                                        <ListItemIcon>\n                                             <CheckCircleOutlineRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={`Phone Number: ${InvestorData.phoneNumber}`} />\n                                   </ListItemButton>\n                              </ListItem>\n\n                              <ListItem disablePadding>\n                                   <ListItemButton>\n                                        <ListItemIcon>\n                                             <CheckCircleOutlineRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={`Secret Key: ${InvestorData.secretKey}`} />\n                                   </ListItemButton>\n                              </ListItem>\n                         </List>\n                    </Box>\n               }\n          </div>\n     )\n}\n\n\nconst InvestorSubmitInformation =() => {\n     const [loading2, setLoading2] = useState(false)\n     const {account} = useContext(MainContext)\n\n\n     const handleSubmit = async (event) => {\n          event.preventDefault();\n          setLoading2(true)\n          const data = new FormData(event.currentTarget)\n          const username = data.get(\"username\")\n          const email = data.get(\"email\")\n          const phoneNumber = data.get(\"phoneNumber\")\n          const secretKey = data.get(\"secretKey\")\n\n          const web3 = new Web3(Web3.givenProvider);\n          const InvestorInformationContract = new web3.eth.Contract(InvestorInformationContractABI, InvestorInformationContractAddress)\n          InvestorInformationContract.methods.SaveInvestorInformation(account, username, email, phoneNumber, secretKey).send({ from: account})\n          .once('receipt', (receipt) => {\n               setLoading2(true)\n               console.log(receipt)\n               window.location.reload()\n          } )\n     }\n\n     return(\n          <div>\n               { loading2 ? \n                    <div>\n                    <Box sx={{ display: 'flex' }}>\n                         <CircularProgress size={60} />\n                    </Box>\n               </div>\n               : \n               <Box component=\"form\" onSubmit = {handleSubmit} >\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Username\"\n                         name = \"username\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Email\"\n                         name = \"email\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\"}}\n                    />\n                    <div style={{ paddingTop: \"20px\"}}></div>\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Phone Number\"\n                         name = \"phoneNumber\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\", pr: \"2%\"}}\n                    />\n                    <TextField required\n                         id=\"standard-required\"\n                         label=\"Secret Key\"\n                         type = \"password\"\n                         name = \"secretKey\"\n                         variant=\"standard\"\n                         sx ={{ width: \"50%\"}}\n                    />\n                    <Button type=\"submit\" variant=\"outlined\" sx={{ mt: 4, width: \"25%\", borderColor: '#737373', color: '#404040'}}>Submit</Button>\n               </Box>\n               }\n          </div>\n     )\n}","import React, {useEffect, useState, useContext} from 'react';\nimport {Box, Paper, Divider,  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Button, ButtonGroup, Link} from '@mui/material';\nimport { TokenExchangeTypeA2ContractAddress, TokenExchangeTypeA2ConractABI} from \"../../blockchainJsonFile/blockchainAbiAddress\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Web3 from 'web3';\nimport { MainContext } from '../../context/MainContext';\n\n\nexport const CompanyIPO = () => {\n     const [loading, setLoading] = useState(true);\n     const [capPrice, setCapPrice] = useState()\n     const {account} = useContext(MainContext);\n     const [bidTokenValue, setBidTokenValue] = useState()\n     const [cutoffPrice, setCutoffPrice] = useState()\n     const [extraToken, setExtraToken] = useState()\n     const [a2CompanyInfo, setA2CompanyInfo] = useState()\n\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress)\n\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const isCompanyCutOff = await TokenExchangeTypeA2Contract.methods.isCompanyCutOff(account).call();\n                    console.log(isCompanyCutOff)\n                    if(isCompanyCutOff == true) { window.location.replace(\"/\")}\n\n                    const typeA2CompanyInfo = await TokenExchangeTypeA2Contract.methods.typeA2Company(account).call();\n                    const selectCutOffPrice = await TokenExchangeTypeA2Contract.methods.selectCutOffPrice(account).call();\n                    setA2CompanyInfo(typeA2CompanyInfo)\n                    setCutoffPrice(selectCutOffPrice[0])\n                    setExtraToken(selectCutOffPrice[1])\n                    \n\n                    const priceDifference = typeA2CompanyInfo.capPrice - typeA2CompanyInfo.floorPrice;\n                    let value = []\n                    for(var i = 0; i <= priceDifference; i++) {\n                         var currentPrice = typeA2CompanyInfo.capPrice - i ;\n                         value[i] = await TokenExchangeTypeA2Contract.methods.numberOftokenOnBidPrice(account, currentPrice).call();\n                    }\n                    setBidTokenValue(value)\n                    setCapPrice(typeA2CompanyInfo.capPrice)\n                    setLoading(false)\n               }\n          }\n          fetch_data();\n\n          return function cleanup() {mounted = false}\n     }, [])\n\n     return(\n          <div>\n               <Box sx={{pt: \"3%\", pb: \"8%\"}}>\n                    <Paper variant='outlined' sx={{p: '2%'}}>\n                         <h3>Token Type A2 - Book Building Company</h3>\n                         <Divider/>\n\n                         { loading ?\n                              <div>\n                                   <Box sx={{ display: 'flex', pt: 2 }}>\n                                        <CircularProgress size={60} />\n                                   </Box>\n                              </div>\n                              :\n                              <div>\n                                   <TokenOnBidPriceTable \n                                        bidTokenValue= {bidTokenValue} \n                                        account={account} capPrice={capPrice} \n                                        a2CompanyInfo = {a2CompanyInfo}\n                                        cutoffPrice={cutoffPrice} \n                                        extraToken = {extraToken}/>\n                              </div>\n                         }\n\n                    </Paper>\n               </Box>\n          </div>\n     )\n}\n\n\nconst TokenOnBidPriceTable = (props) => {\n     const bidTokenValue = props.bidTokenValue;\n     const account = props.account;\n     const A2CompanyInfo = props.a2CompanyInfo;\n     const capPrice = props.capPrice;\n     const cutoffPrice = props.cutoffPrice;\n     const extraToken = props.extraToken;\n\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeTypeA2Contract = new web3.eth.Contract(TokenExchangeTypeA2ConractABI, TokenExchangeTypeA2ContractAddress)\n\n     const handleClick = async () => {\n          console.log(\"Extra Token\", extraToken)\n          const priceDifference = A2CompanyInfo.capPrice - A2CompanyInfo.floorPrice;\n          console.log(priceDifference)\n\n          await TokenExchangeTypeA2Contract.methods.IPOTokenExchange(account, cutoffPrice).send({from:account})\n          .once('receipt', (receipt) => {\n               console.log( receipt)\n          })    \n\n          // for (var i =0; i <= priceDifference; i ++) {\n          //      var currentPrice = A2CompanyInfo.capPrice - i\n          //      await TokenExchangeTypeA2Contract.methods.IPOTokenExchange(account, cutoffPrice, currentPrice, extraToken).send({from:account})\n          //      .once('receipt', (receipt) => {\n          //           console.log(currentPrice, receipt)\n          //      })               \n\n               // const receipt = await TokenExchangeTypeA2Contract.methods.IPOTokenExchange(account, cutoffPrice, currentPrice, extraToken).call({from:account})\n               // console.log(currentPrice, receipt)\n          // }\n          console.log('successful')\n\n     }\n\n\n     return(\n          <div>\n               <TableContainer >\n                    <Table  aria-label=\"customized table\">\n                         <TableHead>\n                              <TableRow>\n                                   <TableCell align=\"left\">Company Address</TableCell>\n                                   <TableCell align=\"center\">Bid Price</TableCell>\n                                   <TableCell align=\"right\">Bid Token</TableCell>\n                              </TableRow>\n                         </TableHead>\n\n                         <TableBody>\n                              {bidTokenValue.map((value, index) => (\n                                   <TableRow key={index}  >\n                                   <TableCell align=\"left\">{account}</TableCell>\n                                        <TableCell align=\"center\">{capPrice - index}</TableCell>\n                                        <TableCell align=\"right\">{value}</TableCell>\n                                   </TableRow>\n                              ))}\n                         </TableBody>\n\n                    </Table>\n               </TableContainer>\n\n               <Box sx={{ pt: '2%', display: 'flex', justifyContent: 'right'}}>\n                    { cutoffPrice == 0 ? null :\n                         <Button onClick={handleClick} variant='contained' sx={{ minWidth: \"27%\"}}>Cutoff at Price {cutoffPrice} </Button>\n                    }\n               </Box>\n          </div>\n     )\n}","import React from 'react';\nimport { CompanyIPO } from './companyIPO';\n\nexport const   TokenTypeA2 = () => {\n\n\n     return(\n          <div>\n               <CompanyIPO/>\n          </div>\n     )\n}","import React, {useContext, useEffect, useState} from \"react\";\nimport {Box, Divider, Paper, Grid} from \"@mui/material\";\nimport { MainContext } from \"../../context/MainContext\";\nimport {shortenAddress} from '../../utility/useWindowResize';\nimport Web3 from \"web3\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { TokenExchangeContractABI, TokenExchangeContractAddress } from \"../../blockchainJsonFile/blockchainAbiAddress\";\nimport { TokenTypeA2 } from \"./tokenTypeA2Dashboard\";\n\n\nexport const TypeA1orTypeA2 = () => {\n     const [isTypeA1, setIsTypeA1] = useState(false);\n     const {isCompany, account} = useContext(MainContext);\n\n     return(\n          <div>\n               <h3 style={{paddingTop: \"8%\"}}>Company Dashboard {account}</h3>\n               { isCompany == true? \n               <CompanyDashboardTypeA1/>\n               : \n               <TokenTypeA2 />\n               }\n          </div>\n     )\n}\n\n\nexport const CompanyDashboardTypeA1 = () => {\n     const {account} = useContext(MainContext);\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenExchangeContract = new web3.eth.Contract(TokenExchangeContractABI,  TokenExchangeContractAddress);\n     const [investorList, setInvestorList] = useState()\n     const [loading, setLoading] = useState(true)\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted && account){\n                    const dataLength = await TokenExchangeContract.methods.GetCompanyAllInvestorLength(account).call({from:account})\n\n                    let values = []\n                    for(let i = 0; i < dataLength; i++){\n                         values[i] = await TokenExchangeContract.methods.GetCompanyAllInvestor(account, i).call({from:account})\n                    }\n                    setInvestorList(values)\n                    setLoading(false)\n               }\n          }\n          fetch_data()\n\n          return function cleanup() {mounted = false}\n     }, [account])\n\n     return(\n          <div>\n               <Box sx={{ pb: 6}}>\n                    {loading ? \n                         <div>\n                              <Box  sx={{  pt: 5 }}>\n                                   <CircularProgress size={60} />\n                              </Box>\n                         </div>\n                    :\n                         <div style={{ paddingTop: \"3%\", paddingBottom: \"5%\"}}>\n                              <Paper variant=\"outlined\">\n                                   <CompanyInvestorList investorList = {investorList} />\n                              </Paper>\n                         </div>\n                    }\n               </Box>\n          </div>\n     )\n}\n\n\nconst CompanyInvestorList = (props) => {\n     const investorList = props.investorList;\n     // console.log(investorList)\n     const {account} = useContext(MainContext);\n\n     return(\n          <div>\n               <h4 style={{padding: 18}}>Investor List (Investor Address = Tokens)</h4>\n               <Divider />\n               <Grid container spacing={2} sx={{p:2}}>\n                    {investorList.map((investor) => investor.numberOfTokenPurchased == 0 ? null : (\n                         <Grid item key={investor.investorAddress} sx={{ width : '50%'}}>\n                              <Paper variant=\"outlined\" sx={{ p:3}}>\n                                   {investor.investorAddress} = {investor.numberOfTokenPurchased}\n                              </Paper>\n                         </Grid>\n                    ))}\n               </Grid>\n          </div>\n     )\n}","import React, {useContext, useState, useEffect} from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Grid, Paper } from \"@mui/material\";\nimport { MainContext } from \"../../context/MainContext\";\nimport {Button, ButtonGroup, Divider, Box, TextField} from \"@mui/material\";\nimport Grid2 from '@mui/material/Unstable_Grid2';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { TokenExchangeContractABI, TokenExchangeContractAddress, Exchange_token_address, Exchange_2nd_market_token_file } from \"../../blockchainJsonFile/blockchainAbiAddress\";\nimport Web3 from \"web3\";\n\n\n\nexport const CompanyExchangeToken = () => {\n     const {trading_code} = useParams();\n     const location = useLocation();\n     var companyAddress\n     var companyId\n     var companyName\n     if(location.state) {\n          companyAddress = location.state.companyAddress\n          companyId = location.state.companyId\n          companyName = location.state.companyName\n     } else {\n          window.location.replace(\"/\")\n     }\n\n     const {account } = useContext(MainContext)\n     const web3 = new Web3(Web3.givenProvider);\n     const TokenAContract = new  web3.eth.Contract(TokenExchangeContractABI, TokenExchangeContractAddress);\n     const TokenExContract = new  web3.eth.Contract(Exchange_2nd_market_token_file, Exchange_token_address); \n     const [user_info, setUser_info] = useState()\n     const [last_ex_price, setLast_ex_price] = useState(null)\n\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const last_ex_price_data = await TokenExContract.methods.last_ex_price(companyAddress).call();\n                    setLast_ex_price(last_ex_price_data);\n                    console.log(last_ex_price_data)\n                    const user_info_data = await TokenAContract.methods.investorTokenInfo(account, companyAddress).call({from:account})\n                    setUser_info(user_info_data)\n                    \n               }\n          }\n          fetch_data()\n\n          return function cleanup() {mounted = false}\n     }, [])\n\n\n     return(\n          <div style={{ padding: \"100px 0px\"}}>\n               <p style={{ fontSize: \"65px\"}}>{last_ex_price} GWEI </p>\n               <h2 >Trading Code: {trading_code}</h2>\n               <h5 >Company Name: {companyName}</h5>\n               <h5 style={{ paddingBottom: \"50px\"}}>Company Address: {companyAddress}</h5>\n\n               {!account || !user_info  ? null :\n                    <React.Fragment>\n                         <Purchased_Tokens companyAddress = {companyAddress} companyName= {companyName} companyId={companyId} trading_code = {trading_code}/>\n                         <Sell_tokens  companyAddress = {companyAddress}  user_info={user_info} companyName= {companyName} companyId={companyId} trading_code = {trading_code}/>\n                    </React.Fragment>\n               }\n               \n          </div>\n     )\n}\n\n\n\n\n\nconst Purchased_Tokens = (props) => {\n     const [loading, setLoading] = useState(false)\n     const [loading2, setLoading2] = useState(false)\n     const [instantlyPrice, setIstantlyPrice] = useState(false)\n     const {account } = useContext(MainContext)\n     const companyAddress = props.companyAddress\n     const company_name = props.companyName;\n     const company_id = props.companyId;\n     const trading_code = props.trading_code;\n\n     const web3 = new Web3(Web3.givenProvider); \n     const TokenExContract = new  web3.eth.Contract(Exchange_2nd_market_token_file, Exchange_token_address); \n     const [remaining_buying_token, setRemaining_buying_token] = useState(0)\n     const [buy_instantly_token, setBuy_instantly_token] = useState(0);\n     const [buy_instantly_price, setBuy_instantly_price] = useState(0);\n     const [buy_instantly_total, setBuy_instantly_total] = useState(0);\n     \n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const data =  await TokenExContract.methods.remaining_token_for_buy(companyAddress, account).call({from: account});\n                    console.log(data)\n                    setRemaining_buying_token(data)\n               }\n          }\n          fetch_data();\n\n          return function cleanup() { mounted = false }\n     } , [])\n\n\n     const bid_token = (e) => {\n          e.preventDefault();\n          setLoading(true);\n          const data = new FormData(e.currentTarget);\n          const bid_token = data.get(\"bid_token\");\n          const bid_price = data.get(\"bid_price\")\n          console.log(companyAddress, account,  bid_price, bid_token, company_name, company_id, trading_code, TokenExchangeContractAddress)\n\n          const total_price = bid_token * bid_price;\n          const value = (total_price * Math.pow(10, 9))\n\n          TokenExContract.methods.Bid_token(companyAddress, account,  bid_token, bid_price,  company_name, company_id, trading_code, TokenExchangeContractAddress).send({from:account, value: value})\n          .once('receipt', (receipt) => {\n               console.log(receipt);\n               console.log(\"Successfully run this method\")\n               setLoading(false);\n               window.location.reload();\n          })\n     }\n\n\n     const buy_instantly = async (event) => {\n          event.preventDefault();\n          setLoading2(true)\n\n          const data = new FormData(event.currentTarget);\n          const number_of_token_want_to_purchased = data.get(\"number_of_token_want_to_purchased\");\n          console.log(number_of_token_want_to_purchased)\n\n          const blockchain_data = await TokenExContract.methods.View_instantly_buying_price(companyAddress, number_of_token_want_to_purchased).call()\n          console.log('return value', blockchain_data);\n          setBuy_instantly_token(number_of_token_want_to_purchased)\n          setBuy_instantly_price(blockchain_data[0])\n          setBuy_instantly_total(blockchain_data[1])\n\n\n          setLoading2(false)\n          setIstantlyPrice(true)\n     }\n\n\n     const confirm_instantly_buy = () => {\n          setLoading2(true)\n          const amount = buy_instantly_token * buy_instantly_price;\n          const value = (amount * Math.pow(10, 9))\n\n          TokenExContract.methods.Bid_token(companyAddress, account,   buy_instantly_token, buy_instantly_price, company_name, company_id, trading_code, TokenExchangeContractAddress).send({from:account, value: value})\n          .once('receipt', (receipt) => {\n               console.log(receipt);\n               console.log(\"Successfully run this method\")\n               setLoading2(false);\n               window.location.reload();\n          })\n     }\n\n\n     return(\n          <div>\n               <Paper variant=\"outlined\" sx={{p:3}}>\n                         <center style={{paddingBottom: \"10px\"}}>\n                              <h3>Purchase a token</h3>\n                              <p>Remaining token for buy: {remaining_buying_token}</p>\n                         </center>\n                         <Divider />\n\n                         <Box sx={{p:3}} >\n                              <Grid2 container spacing={2}>\n                                   <Grid2 item xs={6}>\n                                        { loading ? <Loading_bar /> : \n                                        <Box component=\"form\" onSubmit={bid_token}>\n\n                                             <h5>Purchase a token with Bidding</h5>\n                                             <div>\n                                                  <TextField name= \"bid_token\" required type=\"number\" InputProps={{inputProps: {step: 1}}}  sx={{pr: 2,  width: 143}} variant=\"standard\" label=\"Bid Token\" />\n                                                  <TextField name=\"bid_price\" required step=\"1\" type=\"number\" sx={{width: 143}} variant=\"standard\" label=\"Bid Price\" />\n                                             </div>\n                                             <Button type=\"submit\" sx={{ mt: 3, width: \"120px\"}} variant=\"outlined\" >Bid</Button>\n\n                                        </Box>\n                                        }\n                                   </Grid2>\n\n\n                                   <div style={{ height: \"150px\", marginTop: \"20px\", borderLeft: \"1px solid \"}}></div>\n                                   <Grid2 item xs={5.90} >\n                                        { instantlyPrice || loading2 ? null : \n\n                                             <Box component=\"form\" onSubmit={buy_instantly}>\n                                                  <h5 style={{ display: \"flex\", justifyContent: \"right\"}}>Instantly Purchase a token </h5>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\"}}>\n                                                       <TextField type=\"number\" name= \"number_of_token_want_to_purchased\" required InputProps={{inputProps: {step: 1}}}  sx={{width: 250}}  variant=\"standard\" label=\"How Much token you want?\" />\n                                                  </div>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\"}}>\n                                                       <Button type=\"submit\"  sx={{ mt: 3, width: \"120px\"}} variant=\"outlined\" >Submit</Button>\n                                                  </div>\n                                             </Box>\n\n                                        }\n                                        { !instantlyPrice || loading2 ? null :\n                                             <Box>\n                                                  <h5 style={{ display: \"flex\", justifyContent: \"right\"}}>Instantly Purchase a token </h5>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\" , paddingTop: \"35px\"}}>\n                                                       <h4>{buy_instantly_token} Token is now {buy_instantly_total} GWEI</h4>\n                                                  </div>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\"}}>\n                                                       <Button \n                                                            onClick={() => {confirm_instantly_buy()}} \n                                                            sx={{ mt: 0, width: \"120px\", display: buy_instantly_total == 0 ? 'none': \"\"}} variant=\"outlined\" >Confirm</Button>\n                                                  </div>\n                                             </Box>\n                                        }\n\n                                        { !loading2 ? null : <div style={{ display: \"flex\", justifyContent: \"right\"}}><Loading_bar /></div> }\n                                        \n                                   </Grid2>\n                              </Grid2>\n                         </Box>\n\n               </Paper>\n          </div>\n     )\n}\n\n\n\n\n\nconst Sell_tokens= (props) => {\n     const [loading, setLoading] = useState(false)\n     const [loading2, setLoading2] = useState(false)\n     const [instantlyPrice, setIstantlyPrice] = useState(false)\n     const {account } = useContext(MainContext)\n     const companyAddress = props.companyAddress\n     const user_info = props.user_info\n     const company_name = props.companyName;\n     const company_id = props.companyId;\n     const trading_code = props.trading_code;\n     const [remaining_selling_token, setRemaining_selling_token] = useState(0)\n     const [sell_instantly_token, setSell_instantly_token] = useState(0);\n     const [sell_instantly_price, setSell_instantly_price] = useState(0);\n     const [sell_instantly_total, setSell_instantly_total] = useState(0);\n\n     const web3 = new Web3(Web3.givenProvider); \n     const TokenExContract = new  web3.eth.Contract(Exchange_2nd_market_token_file, Exchange_token_address); \n\n\n     useEffect(() => {\n          let mounted = true;\n          const fetch_data = async () => {\n               if(mounted) {\n                    const data = await TokenExContract.methods.remaining_token_for_sell(companyAddress, account).call({from:account})\n                    console.log(data)\n                    setRemaining_selling_token(data)\n               }\n          }\n          fetch_data();\n\n          return function cleanup() {mounted = false};\n     }, [])\n\n\n     const ask_token = (e) => {\n          e.preventDefault();\n          setLoading(true)\n          const data = new FormData(e.currentTarget);\n          const ask_token = data.get(\"ask_token\");\n          const ask_price = data.get(\"ask_price\")\n          console.log(companyAddress, account,  ask_price, ask_token)\n\n          TokenExContract.methods.Ask_token(companyAddress, account, ask_token, ask_price, company_name, company_id, trading_code, TokenExchangeContractAddress ).send({from:account})\n          .once('receipt', (receipt) => {\n               console.log(receipt);\n               setLoading(false);\n               window.location.reload();\n          })\n\n     }\n\n\n     const sell_instantly = async (event) => {\n          event.preventDefault();\n          const data = new FormData(event.currentTarget);\n          const number_of_token_want_to_sell = data.get(\"number_of_token_want_to_sell\");\n          console.log(number_of_token_want_to_sell)\n\n          setLoading2(true)\n          const blockchain_data = await TokenExContract.methods.View_instantly_selling_price(companyAddress, number_of_token_want_to_sell).call({from:account});\n          console.log('return_value', blockchain_data)\n          setSell_instantly_token(number_of_token_want_to_sell )\n          setSell_instantly_price(blockchain_data[0])\n          setSell_instantly_total(blockchain_data[1])\n\n          setLoading2(false)\n          setIstantlyPrice(true)\n     }\n\n\n     const confirm_instantly_sell = () => {\n          console.log(companyAddress, account)\n          setLoading2(true)\n\n          TokenExContract.methods.Ask_token(companyAddress, account, sell_instantly_token, sell_instantly_price, company_name, company_id, trading_code, TokenExchangeContractAddress ).send({from:account})\n          .once('receipt', (receipt) => {\n               console.log(receipt);\n               setLoading2(false)\n               window.location.reload();\n          })\n     }\n\n\n     return(\n          <div style={{marginTop: \"90px\", display: user_info['companyName'] == \"\" ? 'none' : ''}}>\n               <Paper variant=\"outlined\" sx={{p:3}}>\n                         <center style={{paddingBottom: \"10px\"}}>\n                              <h3>Sell a Token </h3>\n                              <p>Current Available token: {user_info['numberOfTokenPurchased']} | Remaining token for sell: {remaining_selling_token}</p>\n                         </center>\n                         <Divider />\n\n                         <Box sx={{p:3}} >\n                              <Grid2 container spacing={2}>\n                                   <Grid2 item xs={6}>\n                                        { loading ? <Loading_bar /> : \n                                        <Box component=\"form\" onSubmit={ask_token}>\n\n                                             <h5>Sell a token with Asking</h5>\n                                             <div>\n                                                  <TextField name= \"ask_token\" required type=\"number\" InputProps={{inputProps: {step: 1}}}  sx={{ pr: 2, width: 143}} variant=\"standard\" label=\"Ask Token\" />\n                                                  <TextField name=\"ask_price\" required step=\"1\" type=\"number\" sx={{width: 143}} variant=\"standard\" label=\"Ask Price\" />\n                                             </div>\n                                             <Button type=\"submit\" sx={{ mt: 3, width: \"120px\"}} variant=\"outlined\" >Ask</Button>\n\n                                        </Box>\n                                        }\n                                   </Grid2>\n\n\n                                   <div style={{ height: \"150px\", marginTop: \"20px\", borderLeft: \"1px solid \"}}></div>\n                                   <Grid2 item xs={5.90} >\n                                        { instantlyPrice || loading2 ? null : \n\n                                             <Box component=\"form\" onSubmit={sell_instantly}>\n                                                  <h5 style={{ display: \"flex\", justifyContent: \"right\"}}>Instantly sell a token </h5>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\"}}>\n                                                       <TextField type=\"number\" name= \"number_of_token_want_to_sell\" required InputProps={{inputProps: {step: 1}}}  sx={{width: 250}}  variant=\"standard\" label=\"Number of want to sell\" />\n                                                  </div>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\"}}>\n                                                       <Button type=\"submit\"  sx={{ mt: 3, width: \"120px\"}} variant=\"outlined\" >Submit</Button>\n                                                  </div>\n                                             </Box>\n\n                                        }\n                                        { !instantlyPrice || loading2 ? null :\n                                             <Box>\n                                                  <h5 style={{ display: \"flex\", justifyContent: \"right\"}}>Instantly sell a token </h5>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\" , paddingTop: \"35px\"}}>\n                                                       <h4>{sell_instantly_token} Token is now {sell_instantly_total} GWEI</h4>\n                                                  </div>\n                                                  <div style={{ display: \"flex\", justifyContent: \"right\"}}>\n                                                       <Button \n                                                            onClick={() => {confirm_instantly_sell()}} \n                                                            sx={{ mt: 0, width: \"120px\", display: sell_instantly_total == 0 ? 'none' : \"\"}} variant=\"outlined\" >Confirm</Button>\n                                                  </div>\n                                             </Box>\n                                        }\n\n                                        { !loading2 ? null : <div style={{ display: \"flex\", justifyContent: \"right\"}}><Loading_bar /></div> }\n                                        \n                                   </Grid2>\n                              </Grid2>\n                         </Box>\n\n               </Paper>\n          </div>\n     )\n}\n\n\n\n\n\nconst Loading_bar = () => {\n     return(\n          <div >\n               <Box sx={{ display: 'flex', pt: 2 }}>\n                    <CircularProgress size={60} />\n               </Box>\n          </div>\n     )\n}","import React , { useContext} from \"react\";\nimport {Routes, Route , Navigate} from 'react-router-dom';\nimport { Home } from \"./templates/Home\";\nimport { About } from \"./templates/About\";\nimport { Profile } from \"./templates/profile/ProfilePage\";\nimport { MainContext } from \"./context/MainContext\";\nimport { Companies} from \"./templates/companiesToken/ListOfExchangeCompany\";\nimport { TypeA1orTypeA2 } from \"./templates/companyDashboard/tokenTypeA1Dashboard\";\nimport { CompanyExchangeToken } from \"./templates/2ndMarket/companyExchange\";\n\n\nexport const MainUrls = () => {\n     const { account } = useContext(MainContext)\n     const isAccount = sessionStorage.getItem(\"account\") ? sessionStorage.getItem(\"account\") : false;\n\n     return(\n          <div>\n               <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    <Route path=\"/about\" element={<About />} />\n                    <Route path=\"/profile\" element={ isAccount ? <Profile /> : <Navigate to=\"/\" /> } />\n                    <Route path=\"/companies\" element={ isAccount ? <Companies /> : <Navigate to = \"/\" /> } />\n\n                    <Route path=\"/company-dashboard\" element={ isAccount ? <TypeA1orTypeA2 /> : <Navigate to=\"/\" /> } />\n                    <Route path=\"/:trading_code\" element = {<CompanyExchangeToken />} />\n               </Routes>\n          </div>\n     )\n}","import React, {  useContext } from \"react\";\nimport { Button, Box, Divider, List, ListItem, ListItemButton, ListItemText, ListItemIcon } from \"@mui/material\";\nimport AllInclusiveRoundedIcon from '@mui/icons-material/AllInclusiveRounded';\nimport { useWindowResize } from \"../utility/useWindowResize\";\nimport { Link } from \"@mui/material\";\nimport MenuOpenRoundedIcon from '@mui/icons-material/MenuOpenRounded';\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\nimport AssignmentIndRoundedIcon from '@mui/icons-material/AssignmentIndRounded';\nimport PaidRoundedIcon from '@mui/icons-material/PaidRounded';\nimport { MainContext } from \"../context/MainContext\";\nimport { shortenAddress } from \"../utility/useWindowResize\";\nimport CorporateFareRoundedIcon from '@mui/icons-material/CorporateFareRounded';\nimport ExitToAppRoundedIcon from '@mui/icons-material/ExitToAppRounded';\n\n\n\nexport const Header = () => {\n  const [height, width] = useWindowResize()\n  const { account, connectWallet} = useContext(MainContext)\n\n  return (\n    <React.Fragment>\n      <div id=\"header\" className=\"drawer_glass_style\" style={{ position: 'fixed', height: \"53px\", zIndex: '1000', display: 'flex', justifyContent: 'space-between', width: '100%', alignItems: \"center\" }}>\n\n        <Button href=\"/\"\n          sx={{\n            marginTop: \"0.5%\",\n            paddingLeft: \"2%\",\n            marginLeft: \"2%\",\n            color: 'cprimary',\n            '&:hover': { color: \"cprimary_hover\" }\n          }}>\n          <h5>GENESIEX LAB</h5>\n        </Button>\n\n        <div style={{ padding: '2%', marginTop: \"0%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n\n          {account ?\n            <Button href=\"/profile\" sx={{ display: width < 600 ? \"none\": \"\", color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>Profile</Button>\n             :\n            <Button onClick={() => connectWallet()} sx={{ display: width < 600 ? \"none\": \"\", color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>Connect Wallet</Button>\n            }\n\n          <div data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">\n            <div style={{ mt: '-20px' }}>\n              <MenuOpenRoundedIcon fontSize=\"large\" sx={{ mx: 1, color: 'cprimary', cursor: \"pointer\" }} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Header_bar />\n    </React.Fragment>\n  )\n}\n\n\nconst Header_bar = () => {\n  const [height, width] = useWindowResize()\n\n  return (\n    <div>\n      <div>\n        <div style={{ width: width < 600 ? \"80%\" : \"30%\", marginBottom: \"-4px\", marginTop: \"-4px\" }} className=\"offcanvas offcanvas-end drawer_glass_style2\"  id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\", pt: \"3%\", alignItems: \"center\" }}>\n            <Button href=\"/\" sx={{ ml: \"35px\", color: \"cprimary\", fontSize: \"106%\", '&:hover': { color: \"cprimary_hover\" } }}>\n              GENESIEX LAB\n            </Button>\n            <Box sx={{ mr: \"3%\", cursor: \"pointer\" }}>\n              <CancelRoundedIcon data-bs-dismiss=\"offcanvas\" fontSize=\"large\" sx={{ color: \"cprimary\", mx: 2, backgroundColor: \"transparent\", borderRadius: \"50%\" }} />\n            </Box>\n          </Box>\n          <Divider sx={{ mt: \"0.5%\" }} />\n\n          <div style={{ paddingLeft: \"5%\" }}>\n            <List_item />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nconst List_item = () => {\n  const [height, width] = useWindowResize()\n  const { account, isCompany, connectWallet, DisconnectWallet , isCompanyTypeA2} = useContext(MainContext)\n  // console.log(isCompany)\n\n  return (\n    <div >\n      <List >\n\n        { account ?\n          <Link href=\"/profile\" underline=\"none\">\n            <ListItem disablePadding data-bs-dismiss=\"offcanvas\">\n            <ListItemButton sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>\n              <ListItemIcon>\n                <AllInclusiveRoundedIcon sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }} />\n              </ListItemIcon>\n              <ListItemText primary=\"Profile\" />\n            </ListItemButton>\n          </ListItem>\n        </Link>\n        :\n        <ListItem onClick={() => connectWallet()} disablePadding data-bs-dismiss=\"offcanvas\">\n          <ListItemButton sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>\n            <ListItemIcon>\n              <AllInclusiveRoundedIcon sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Connect Wallet\" />\n          </ListItemButton>\n        </ListItem>\n        }\n\n        <Link href=\"/about\" underline=\"none\">\n          <ListItem disablePadding data-bs-dismiss=\"offcanvas\">\n            <ListItemButton sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>\n              <ListItemIcon>\n                <AssignmentIndRoundedIcon sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }} />\n              </ListItemIcon>\n              <ListItemText primary=\"About\" />\n            </ListItemButton>\n          </ListItem>\n        </Link>\n\n        <Link href=\"/companies\" underline=\"none\">\n          <ListItem disablePadding data-bs-dismiss=\"offcanvas\">\n            <ListItemButton sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>\n              <ListItemIcon>\n                <PaidRoundedIcon sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }} />\n              </ListItemIcon>\n              <ListItemText primary=\"Token-A Companies\" />\n            </ListItemButton>\n          </ListItem>\n        </Link>\n\n        {!isCompany && !isCompanyTypeA2 ? null :\n          <Link href=\"/company-dashboard\" underline=\"none\">\n          <ListItem disablePadding data-bs-dismiss=\"offcanvas\">\n            <ListItemButton sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>\n              <ListItemIcon>\n                <CorporateFareRoundedIcon sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }} />\n              </ListItemIcon>\n              <ListItemText primary=\"Company Dashboard\" />\n            </ListItemButton>\n          </ListItem>\n        </Link>\n        }\n\n        {!account ? null :\n        <ListItem onClick={() => { DisconnectWallet() }} disablePadding data-bs-dismiss=\"offcanvas\">\n          <ListItemButton sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }}>\n            <ListItemIcon>\n              <ExitToAppRoundedIcon sx={{ color: \"cprimary\", '&:hover': { color: \"cprimary_hover\" } }} />\n            </ListItemIcon>\n            <ListItemText primary=\"Disconnect Wallet\" />\n          </ListItemButton>\n        </ListItem>\n        }\n\n      </List >\n\n      {!account ? null :\n      <div style={{ paddingLeft: \"4.3%\", paddingTop: \"1%\", display: !account ? \"none\" : \"\" , color: \"white\"}}>\n        <h5>Account: {shortenAddress(account)}</h5>\n      </div>\n      }\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/footer2.3314e01b.jpg\";","import React from \"react\";\nimport { Typography, Container} from '@mui/material';\nimport footer from '../media/img1/footer2.jpg';\nimport { useWindowResize } from \"../utility/useWindowResize\";\n\n\nexport const Footer = () => {\n  const [height, width] = useWindowResize()\n\n  return(\n    <div id=\"footer\" style={{ marginTop: \"-10px\"}}>\n      <div \n        style={{ \n          backgroundColor: \"black\", \n          width: \"100%\", \n          height: width < 600 ? \"70vh\" : '100vh', \n          position: 'absolute', \n          zIndex: '10'\n      }}>\n        <img src={footer} alt=\"\" style={{opacity: '0.6', width: '100%', height:  width < 600 ? \"70vh\" : '100vh', objectFit: 'cover', objectPosition: 'top center'}} />\n      </div>\n\n      <Container maxWidth=\"lg\" style={{ position: 'relative', zIndex: '100', paddingTop: width < 600 ? '10%' : '10%'}}>\n        <Typography variant={width < 600 ? 'h5' : 'h4'} sx={{ color : \"white\"}}>GENESIEX LAB </Typography>\n\n        <div style={{ color : \"white\"}}>\n          <Typography variant={ 'body2'}  sx={{fontSize: '20px', display: 'none'}}>\n            DISPLAY: NONE\n          </Typography>\n        </div>\n        <div>\n          <Typography variant=\"body1\" sx={{ width: \"40%\", color: \"white\", pt: \"1%\", display: width < 600 ? 'none' : 'none'}}>\n           DISPLAY: NONE\n          </Typography>\n        </div>\n\n        <div style={{\"fontSize\": \"14px\", color : \"white\", paddingTop: '1%'}}>\n          <div>\n            <p>©Copyright 2022 by GENESIEX LAB</p>\n          </div>\n        </div>\n      </Container>\n      \n    </div>\n  )\n}\n\n\n","import { createTheme } from \"@mui/material\";\n\n\nexport const Mui_custom_theme = createTheme({\n  palette: {\n    mode: 'light',\n    background_color : \"#141e30\",\n    background_color_dark: \"#000000\",\n    rprimary: \"rgba(49,214,230,255)\",\n    rprimary_hover: \"rgba(49,214,230,0.60)\",\n    cprimary: \"#ede8e8\",\n    cprimary_hover: \"#a8a5a5\",\n  },\n\n  typography: {\n    fontFamily: \"'Nunito', sans-serif\",\n  }\n\n})","import React from 'react';\nimport { Header } from './header';\nimport { Footer } from './footer';\nimport { ThemeProvider } from '@mui/system';\nimport { Paper, Container } from '@mui/material';\nimport { Mui_custom_theme } from './mui_custom_theme';\n\n\nexport const Layout =  ({children}) => {\n\n  return(\n    <div>\n      <ThemeProvider theme={Mui_custom_theme}>\n        <header>\n          <Header />\n        </header>\n\n        <Paper square elevation={0} >\n          <main>\n            <Container maxWidth = \"lg\">\n              {children}\n            </Container>\n          </main>\n        </Paper>\n\n        <footer>\n          <Footer />\n        </footer>\n      </ThemeProvider>\n    </div>\n  )\n}","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { MainProvider } from \"./context/MainContext\";\nimport { MainUrls } from \"./mainUrls\";\nimport { Layout } from './layout/base';\n\n\n\nexport const App = () => {\n\n  return(\n    <div>\n      <Router>\n        <MainProvider>\n\n          <Layout>\n            <MainUrls />\n          </Layout>\n          \n        </MainProvider>\n      </Router>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {App} from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}